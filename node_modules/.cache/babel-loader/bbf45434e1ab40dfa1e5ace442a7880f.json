{"ast":null,"code":"import axios from \"axios\";\n\nfunction setMusicList(list) {\n  return {\n    type: \"SET_MUSIC_LIST\",\n    list\n  };\n}\n\nfunction queryMusicList() {\n  return function (dispatch) {\n    let p = axios.get(\"/music/music-list.json\");\n    p.then(res => {\n      dispatch(setMusicList(res.data.list)); // 生成一个和歌曲列表一样长度的索引数组\n\n      let tempArr = res.data.list.map((e, i) => {\n        return i;\n      });\n      tempArr.splice(0, 1);\n      dispatch(setRndList(tempArr));\n    });\n    return p;\n  };\n}\n\nfunction setCurrentPlayIndex(index) {\n  return {\n    type: \"SET_CURRENT_PLAY_INDEX\",\n    index\n  };\n}\n\nfunction setPlaying(value) {\n  return {\n    type: \"SET_PLAYING\",\n    value\n  };\n}\n\nfunction setCurrentTime(value) {\n  return {\n    type: \"SET_CURRENT_TIME\",\n    value\n  };\n}\n\nfunction setPlayStyle(value) {\n  return {\n    type: \"SET_PLAY_STYLE\",\n    value\n  };\n}\n\nfunction setRndList(value) {\n  return {\n    type: \"SET_RND_LIST\",\n    value\n  };\n}\n\nfunction setPlayer(player) {\n  return {\n    type: \"SET_PLAYER\",\n    player\n  };\n} // 设置歌词的同步action\n\n\nfunction setLyric(value) {\n  return {\n    type: \"SET_LYRIC\",\n    value\n  };\n} // 请求歌词\n\n\nfunction queryLyric(url) {\n  return dispatch => {\n    return axios.get(url).then(res => {\n      let txt = res.data;\n      let regexp = /\\[(\\d\\d):(\\d\\d\\.\\d\\d)\\](.*)/g;\n      let rs = null;\n      let temp = [];\n\n      while (!!(rs = regexp.exec(txt))) {\n        // console.log(rs);\n        let time = rs[1] * 60 + rs[2] * 1;\n        let content = rs[3];\n        temp.push({\n          time,\n          content\n        });\n      }\n\n      console.log(temp);\n      dispatch(setLyric(temp));\n    });\n  };\n}\n\nexport { queryMusicList, setMusicList, setCurrentPlayIndex, setPlaying, setCurrentTime, setPlayStyle, setRndList, setPlayer, setLyric, queryLyric };","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\闫韩老师\\第十四周\\第四天\\完整音乐播放器\\src\\store\\actions.js"],"names":["axios","setMusicList","list","type","queryMusicList","dispatch","p","get","then","res","data","tempArr","map","e","i","splice","setRndList","setCurrentPlayIndex","index","setPlaying","value","setCurrentTime","setPlayStyle","setPlayer","player","setLyric","queryLyric","url","txt","regexp","rs","temp","exec","time","content","push","console","log"],"mappings":"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","sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nfunction setMusicList(list){\r\n    return {\r\n        type:\"SET_MUSIC_LIST\",\r\n        list\r\n    }\r\n}\r\n\r\nfunction queryMusicList(){\r\n    return function(dispatch){\r\n        let p = axios.get(\"/music/music-list.json\");\r\n        p.then(res=>{\r\n            dispatch(setMusicList(res.data.list));\r\n\r\n            // 生成一个和歌曲列表一样长度的索引数组\r\n            let tempArr = res.data.list.map((e,i)=>{\r\n                return i;\r\n            });\r\n            tempArr.splice(0,1);\r\n            dispatch(setRndList(tempArr));\r\n        });\r\n        return p;\r\n    }\r\n}\r\n\r\nfunction setCurrentPlayIndex(index){\r\n    return {\r\n        type:\"SET_CURRENT_PLAY_INDEX\",\r\n        index\r\n    }\r\n}\r\n\r\nfunction setPlaying(value){\r\n    return {\r\n        type:\"SET_PLAYING\",\r\n        value\r\n    }\r\n}\r\n\r\n\r\nfunction setCurrentTime(value){\r\n    return {\r\n        type:\"SET_CURRENT_TIME\",\r\n        value\r\n    }\r\n}\r\n\r\nfunction setPlayStyle(value){\r\n    return {\r\n        type:\"SET_PLAY_STYLE\",\r\n        value\r\n    }\r\n}\r\n\r\nfunction setRndList(value){\r\n    return {\r\n        type:\"SET_RND_LIST\",\r\n        value\r\n    }\r\n}\r\n\r\nfunction setPlayer(player){\r\n    return {\r\n        type:\"SET_PLAYER\",\r\n        player\r\n    }\r\n}\r\n\r\n\r\n// 设置歌词的同步action\r\nfunction setLyric(value){\r\n    return {\r\n        type:\"SET_LYRIC\",\r\n        value\r\n    }\r\n}\r\n\r\n// 请求歌词\r\nfunction queryLyric(url){\r\n    return dispatch=>{\r\n        return axios.get(url)\r\n        .then(res=>{\r\n            let txt = res.data;\r\n            let regexp = /\\[(\\d\\d):(\\d\\d\\.\\d\\d)\\](.*)/g;\r\n            let rs = null;\r\n            let temp = [];\r\n            while (!!(rs=regexp.exec(txt))) {\r\n                // console.log(rs);\r\n                let time = rs[1]*60+rs[2]*1;\r\n                let content = rs[3];\r\n                temp.push({time,content})\r\n            }\r\n             console.log(temp);\r\n            dispatch(setLyric(temp));\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    queryMusicList,\r\n    setMusicList,\r\n    setCurrentPlayIndex,\r\n    setPlaying,\r\n    setCurrentTime,\r\n    setPlayStyle,\r\n    setRndList,\r\n    setPlayer,\r\n    setLyric,\r\n    queryLyric\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}